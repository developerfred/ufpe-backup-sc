From: <Saved by Microsoft Internet Explorer 5>
Subject: =?Windows-1252?Q?A_Linguagem_Assembly_-_oic=ECliS_=A9?=
Date: Thu, 29 Sep 2005 16:41:14 -0300
MIME-Version: 1.0
Content-Type: multipart/related;
	boundary="----=_NextPart_000_0103_01C5C514.9B590F10";
	type="text/html"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1506

This is a multi-part message in MIME format.

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/lingAssembly.php

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- =A9sobMedida by vickiSoft 06.04.03 ver 1.0 --><!-- 02.08.03 ver 1.2 =
- referElo --><HTML><HEAD><TITLE>A Linguagem Assembly - oic=ECliS =
=A9</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1"><LINK=20
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/styleAsse=
mbly.css"=20
type=3Dtext/css rel=3Dstylesheet>
<META content=3D"oiciliS - Assembly para Iniciantes" name=3Ddescription>
<META content=3D"tutorial, tutoriais, assembly, assembler" =
name=3Dkeywords>
<META content=3D"MSHTML 6.00.2800.1515" name=3DGENERATOR></HEAD>
<BODY>
<TABLE cellSpacing=3D0 cellPadding=3D0 width=3D750 align=3Dcenter>
  <TBODY>
  <TR>
    <TD class=3Dcab1 colSpan=3D3><IMG height=3D32=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/iniA=
ni.gif"=20
      width=3D32 align=3DabsMiddle border=3D0>A LINGUAGEM =
ASSEMBLY</TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <TABLE cellSpacing=3D20 align=3Dleft>
        <TBODY>
        <TR>
          <TD align=3Dmiddle><A=20
            =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/index.php"><IMG=20
            height=3D57 alt=3D"Sil=EDcio Reverso"=20
            =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/grafs/logo.gif"=20
            width=3D106 border=3D0></A>oic=ECliS =A9<BR>Assembly =
Iniciantes<BR>TEXTOS=20
            ACESS=D3RIOS<BR><FONT size=3D-2>(ver 1.2 de 02.08.03)</FONT> =

        </TD></TR></TBODY></TABLE>
      <P>Assembly =E9 uma linguagem de programa=E7=E3o e uma linguagem =
de programa=E7=E3o=20
      serve para fazer... programas. Os programas s=E3o escritos em =
forma de=20
      texto: usando um editor de texto criamos o chamado c=F3digo fonte. =
Este=20
      c=F3digo fonte =E9 transformado pelo compilador e pelo linker num =
programa=20
      execut=E1vel.</P>
      <P>Muitas vezes ouvimos "linguagem assembler". =C9 um erro muito =
difundido.=20
      Na realidade, Assembly =E9 o nome da linguagem e assembler =E9 um =
programa=20
      capaz de compilar c=F3digo fonte em arquivos objeto.</P>
      <P>A linguagem Assembly =E9 considerada de baixo n=EDvel. Isto =
n=E3o significa=20
      que seja menos importante ou eficiente que uma linguagem chamada =
de alto=20
      n=EDvel: s=E3o apenas modos diferentes de se programar e n=EDveis =
diferentes de=20
      atua=E7=E3o. O que posso dizer =E9 que, com uma linguagem de baixo =
n=EDvel como a=20
      Assembly, voc=EA pilota diretamente a CPU do seu computador - nada =
de=20
      intermedi=E1rios.</P>
      <P>Uma das caracter=EDsticas da Assembly =E9 que cada linha do =
c=F3digo fonte=20
      possui apenas uma instru=E7=E3o para o processador (CPU). Por =
exemplo, <I>MOV=20
      EAX,EDX</I> ir=E1 MOVer o conte=FAdo do registrador EDX para o =
registrador=20
      EAX. Neste caso, a instru=E7=E3o "MOV" =E9 chamada de =
mneum=F4nico. Os mneum=F4nicos=20
      s=E3o os "apelidos" das instru=E7=F5es, mais f=E1ceis de guardar =
na mem=F3ria do que=20
      seu valor hexadecimal exigido pelo processador. De mneum=F4nico em =

      mneum=F4nico podemos escrever nosso c=F3digo fonte e fazer com que =
o=20
      processador fa=E7a exatamente o que queremos sem firulas ou perda =
de=20
      tempo.</P>
      <P>O resultado =E9 um programa enxuto, r=E1pido e altamente =
eficiente. Tome=20
      coragem! Experimente programar em Assembly!</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Os componentes da =
linguagem=20
Assembly</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Os componentes da linguagem Assembly s=E3o basicamente as =
instru=E7=F5es para=20
      o processador. Ignorando as instru=E7=F5es que n=E3o podem ser =
utilizadas pelo=20
      sistema operacional Windows, assembly condicional, macros, ponto=20
      flutuante, MMX e instru=E7=F5es de 64 bits, os componentes da =
linguagem=20
      Assembly podem ser divididos nas seguintes categorias:</P>
      <UL>
        <LI>Instru=E7=F5es de registradores=20
        <LI>Instru=E7=F5es de pilha=20
        <LI>Instru=E7=F5es de execu=E7=E3o=20
        <LI>Instru=E7=F5es de mem=F3ria=20
        <LI>Instru=E7=F5es de flag=20
        <LI>Declara=E7=F5es de mem=F3ria=20
        <LI>Diretivas para o assembler=20
        <LI>Coment=E1rios=20
        <LI>Instru=E7=F5es para o sistema operacional =
(Windows)</LI></UL></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Instru=E7=F5es de registradores <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Estas instru=E7=F5es transferem dados ou realizam c=E1lculos =
utilizando os=20
      registradores de 32 bits da CPU. Existem seis registradores de uso =
geral=20
      chamados de EAX, EBX, ECX, EDX, ESI e EDI. Exemplos deste tipo de=20
      instru=E7=E3o s=E3o:</P><PRE class=3Dasmcode>MOV ESI,EBX     ;move =
o conte=FAdo do registrador EBX
			para o registrador ESI
ADD EAX,EDI     ;soma o conte=FAdo do registrador EDI
			com o do registrador EAX
BT ECX,0        ;testa o bit 0 do registrador ECX
CMP EDX,450     ;compara o conte=FAdo de EDX com 450
DIV ECX         ;divide EDX:EAX (inteiro longo) por ECX
MUL ECX         ;multiplica EAX por ECX e p=F5e o resultado em EDX:EAX
SHL EDX,4       ;desloca os bits de EDX para a esquerda em 4 bits
			(multiplica por 16)
TEST EAX,8      ;testa o bit 3 do registrador EAX
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Instru=E7=F5es de pilha <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>A pilha =E9 uma =E1rea de mem=F3ria reservada pelo sistema =
operacional para=20
      cada programa que estiver rodando usar como =E1rea de arquivamento =

      tempor=E1rio. S=E3o exemplos deste tipo de instru=E7=E3o:</P><PRE =
class=3Dasmcode>PUSH EAX        ;p=F5e o conte=FAdo do registrador EAX =
na pilha
POP EDX         ;retira o =FAltimo valor colocado na pilha
			e p=F5e em EDX
PUSH 1000h      ;p=F5e o valor hexadecimal 1000 na pilha
MOV EBP,ESP     ;move o valor do ponteiro da pilha para
			o registrador EBP
SUB ESP,30h     ;move o ponteiro da pilha para abrir uma =E1rea de
			armazenamento para dados locais
MOV D[EBP-20h],500h  ;insere o valor 500 hexa para a =E1rea
			de dados locais
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Instru=E7=F5es de execu=E7=E3o <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Estas instru=E7=F5es desviam o processador para que execute =
c=F3digo a partir=20
      de um ponto que n=E3o seja a pr=F3xima linha de execu=E7=E3o. =
S=E3o exemplos:</P><PRE class=3Dasmcode>CALL MAKEWINDOW ;executa o =
c=F3digo do procedimento e depois retorna
CALL EAX        ;executa o c=F3digo a partir do endere=E7o presente em =
EAX
			e depois retorna
RET             ;termina este procedimento retornando ao chamador
JZ 4            ;se o resultado for zero, continua a execu=E7=E3o a =
partir
			do marcador 4:
JC &gt;.fim        ;se a flag estiver ativa, continua a execu=E7=E3o a =
partir
			de .fim
JMP MAKEWINDOW  ;continua a execu=E7=E3o a partir do procedimento =
nominado
LOOP 2          ;decrementa ECX e salta para o marcador 2: a n=E3o ser
			que ECX=3D0
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Instru=E7=F5es de mem=F3ria <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Estas instru=E7=F5es l=EAem ou escrevem em =E1reas de mem=F3ria =
que n=E3o sejam da=20
      pilha. Normalmente estas =E1reas est=E3o na se=E7=E3o de dados do =
pr=F3prio=20
      execut=E1vel ou podem ser alocadas pelo sistema operacional em =
tempo de=20
      execu=E7=E3o. S=E3o exemplos:</P><PRE class=3Dasmcode>ADD =
EAX,[ESI]     ;adiciona a EAX o conte=FAdo de mem=F3ria cujo ponteiro
			de endere=E7o est=E1 no registrador ESI
MOV EAX,[MEUSDADOS]     ;move para EAX o conte=FAdo de mem=F3ria
			cujo marcador =E9 MEUSDADOS
SUB D[MYDATA+64],10h	;subtrai 10h do dword em MEUSDADOS
			mais 64 bytes
CMP B[MYDATA+EDX*4],2	;compara um byte com 2 numa parte
			do array MEUSDADOS
LODSB           ;carrega o byte na mem=F3ria apontada por ESI em al
STOSD           ;carrega o conte=FAdo de EAX na mem=F3ria apontada por =
EDI
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Instru=E7=F5es de flag <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>As principais flags usadas s=E3o a Z (flag zero), C (flag =
carry), S (flag=20
      de sinal) e D (flag de dire=E7=E3o). A maioria das instru=E7=F5es =
alteram as flags=20
      automaticamente para dar o resultado da instru=E7=E3o. Existem =
determinadas=20
      instru=E7=F5es que podem ser usadas para alterar o valor das flags =

      manualmente:</P><PRE class=3Dasmcode>STC              ;ativa a =
flag de carry
CLC              ;limpa a flag de carry
STD              ;ativa a flag de dire=E7=E3o para LODS, STOS,
			CMPS, SCAS, MOVS
CLD              ;limpa a flag de dire=E7=E3o
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Declara=E7=F5es de mem=F3ria <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>O sistema operacional reserva mem=F3ria para o execut=E1vel =
quando ele =E9=20
      executado. Declara=E7=F5es s=E3o feitas para reservar mem=F3ria na =
<B>se=E7=E3o de=20
      dados</B> ou na <B>se=E7=E3o de constantes</B> se os dados devem =
ser=20
      <B>inicializados</B>, isto =E9, devem receber um valor. Se forem =
dados=20
      <B>n=E3o inicializados</B>, a =E1rea de dados pode ficar reservada =
na <B>se=E7=E3o=20
      de dados n=E3o inicializados</B>. Isto n=E3o toma espa=E7o algum =
no arquivo=20
      execut=E1vel porque um espa=E7o de mem=F3ria =E9 alocado para este =
tipo de dado=20
      quando o execut=E1vel =E9 iniciado pela primeira vez.</P>
      <P>Seguem exemplos de como a mem=F3ria =E9 declarada, o que pode =
variar de=20
      acordo com o assembler utilizado:</P><PRE class=3Dasmcode>DB 4		=
;declara um byte e lhe atribui o valor inicial 4
MEUDADO DB 4	;um byte de valor inicial 4 com o marcador MEUDADO
MYSTRUCT DD 16 DUP 0   ;16 dwords, todos com valor zero,
			chamados MYSTRUCT
BUFFER DB 1024 DUP ?   ;1024 bytes chamados BUFFER como
			dados n=E3o definidos
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Diretivas para o assembler <IMG =
height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>S=E3o instru=E7=F5es que orientam onde o Assembler deve colocar =
o c=F3digo=20
      fonte que as segue. O Assembler marca a se=E7=E3o de c=F3digo como =
apenas para=20
      leitura e execut=E1vel; as se=E7=F5es de dados definidos e =
indefinidos como=20
      leitura/escrita. Veja alguns exemplos (que podem variar de acordo =
com o=20
      assembler):</P><PRE class=3Dasmcode>CODE SECTION     ;tudo o que =
se segue deve ser colocado numa se=E7=E3o
                 ;marcada para apenas leitura e execut=E1vel (c=F3digo)
DATA SECTION     ;tudo o que se segue deve ser colocado numa se=E7=E3o
                 ;com atributos de leitura e escrita mas n=E3o de =
c=F3digo
CONST SECTION    ;tudo o que se segue deve ser colocado numa se=E7=E3o=20
                 ;com atributo de apenas leitura
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Coment=E1rios <IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Ap=F3s ponto e v=EDrgula, o texto =E9 ignorado at=E9 a =
pr=F3xima quebra de linha.=20
      Desta forma =E9 poss=EDvel associar descri=E7=F5es e =
explica=E7=F5es ao c=F3digo fonte,=20
      as quais ser=E3o ignoradas pelo assembler.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dpto1 align=3Dright>Instru=E7=F5es para o sistema =
operacional <IMG=20
      height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
a.gif"=20
      width=3D115 align=3DabsMiddle border=3D0></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Proporcionam ao programador o acesso a uma grande variedade de =
fun=E7=F5es.=20
      No caso do sistema operacional Windows, proporcionam acesso =E0 =
API=20
      (Applications Programming Interface). Veja os exemplos =
abaixo:</P><PRE class=3Dasmcode>PUSH 12h             ;p=F5e valor hexa =
12 na pilha para a chamada =E0 API
CALL GetKeyState     ;pede ao Windows para por o estado da tecla Alt
			em EAX
TEST EAX,80000000h   ;testa se a tecla Alt est=E1 sendo pressionada
			(bit 31 ligado)
JZ &gt;L22              ;n=E3o, saltar para L22
</PRE><PRE class=3Dasmcode>PUSH 24h             ;valor hexa 24 =3D ponto =
de interroga=E7=E3o,
			bot=F5es yes e no
PUSH ESI,EDI         ;endere=E7o do t=EDtulo, endere=E7o da mensagem
PUSH [hWnd]          ;manipulador da janela propriet=E1ria
CALL MessageBoxA     ;mostra a caixa de mensagem Windows pedindo
			yes/no
CMP AL,7             ;checa se "no" foi clicado pelo usu=E1rio
JNZ &gt;L40             ;n=E3o, saltar para L40
</PRE><PRE class=3Dasmcode>PUSH 0
PUSH ADDR FILE_DONE  ;d=E1 endere=E7o do arquivo FILE_DONE para
			receber o resultado
PUSH ECX,EDX         ;ECX =3D bytes que devem ser escritos,
			EDX=3Dfonte de dados,=20
PUSH ESI             ;ESI =3D manipulador do arquivo
CALL WriteFile       ;escrever ECX bytes de EDX para ESI
</PRE><PRE class=3Dasmcode>PUSH 808h,5h         ;808 =3D em baixo e meio =
preenchido, 5 =3D elevado
PUSH EBX,EDX         ;ebx =3D RECT, EDX =3D contexto do dispositivo
CALL DrawEdge        ;desenhar ret=E2ngulo especial com bordas na tela
</PRE><PRE class=3Dasmcode>PUSH 4h,3000h,ESI,0  ;4h =3D fazer mem=F3ria =
leitura/escrita,
			3000h =3D reservar
CALL VirtualAlloc    ;reservar e consignar ESI bytes de mem=F3ria
			leitura/escrita
</PRE><PRE class=3Dasmcode>PUSH 0,[hInst],0,0   ;param, manipulador do =
m=F3dulo, menu
			e propriet=E1rio
PUSH 208,130,30,300  ;altura, largura, y, x
PUSH 80C80000h       ;estilo (POPUP+CAPTION+SYSMENU)
PUSH EAX             ;EAX =3D endere=E7o da string terminada em zero com
			o t=EDtulo
PUSH 'LISTBOX'       ;por ponteiro para 'LISTBOX' na pilha
PUSH 0               ;estilo extended (nenhum)
CALL CreateWindowExA ;criar a janela listbox

...... ou, se preferir, usar INVOKE ..
INVOKE CreateWindowExA, 0,'LISTBOX',EAX,80C80000h,300,30,130,208 \
                      0,0,[hInst],0

.............

INVOKE ShowWindow, [hWnd], 1
</PRE><BR></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dpe1 colSpan=3D3></TD></TR></TBODY></TABLE><BR><BR>
<TABLE cellSpacing=3D0 cellPadding=3D0 width=3D750 align=3Dcenter>
  <TBODY>
  <TR>
    <TD class=3Dcab1 colSpan=3D3>Localizador</TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1 align=3Dmiddle>
      <SCRIPT language=3DJavaScript>=0A=
function setFontSize(fontVal) {=0A=
var fontSet =3D document.getElementById('fontSet');=0A=
var docBase =3D new Array(); docBase =3D =
document.getElementsByTagName('table');=0A=
if (!fontVal) {fontVal =3D document.getElementById('fontSet').value;}=0A=
var docSize =3D fontVal+'pt';=0A=
for(var i=3D0;i<docBase.length;i++)=0A=
docBase[i].style.fontSize =3D docSize;=0A=
var docBase =3D new Array(); docBase =3D =
document.getElementsByTagName('body');=0A=
docBase[0].style.fontSize =3D docSize;=0A=
docSize =3D (fontVal-2)+'pt';=0A=
document.getElementById('xxpe').style.fontSize =3D docSize;=0A=
if (fontSet) {fontSet.value =3D fontVal;}=0A=
}=0A=
</SCRIPT>

      <DIV id=3Dxxpe style=3D"FONT-SIZE: 8pt">
      <HR>

      <CENTER>| <A href=3D"javascript:setFontSize(15)"><SPAN=20
      style=3D"FONT-SIZE: 15pt">A</SPAN></A><A=20
      href=3D"javascript:setFontSize(13)"><SPAN=20
      style=3D"FONT-SIZE: 13pt">A</SPAN></A><A=20
      href=3D"javascript:setFontSize(11)"><SPAN=20
      style=3D"FONT-SIZE: 11pt">A</SPAN></A><A=20
      href=3D"javascript:setFontSize(9)"><SPAN style=3D"FONT-SIZE: =
9pt">A</SPAN></A>=20
      | <A=20
      onmouseover=3D"status=3D'A Aldeia onde as coisas acontecem =
numaboa';return true"=20
      href=3D"http://www.numaboa.com.br/index.php"><IMG height=3D15=20
      alt=3D"P=E1gina Inicial" =
src=3D"http://www.numaboa.com.br/img/haus2.png"=20
      width=3D15 align=3Dbottom border=3D0></A> | <A=20
      onmouseover=3D"status=3D'Saiba o que a Aldeia tem para =
oferecer';return true"=20
      title=3D"Mapa do site"=20
      href=3D"http://www.numaboa.com.br/aldeia/index.php">Mapa do =
Site</A> | <A=20
      onmouseover=3D"status=3D'Fique por dentro das novidades';return =
true"=20
      title=3D"Novidades na Aldeia"=20
      =
href=3D"http://www.numaboa.com.br/aldeia/destaques.php">Novidades</A> | =
<A=20
      onmouseover=3D"status=3D'Procure na Aldeia';return true"=20
      title=3D"Abre em nova janela"=20
      href=3D"http://www.numaboa.com.br/portal/index.php" =
target=3D_blank>Busca</A>=20
      | <A onmouseover=3D"status=3D'Indique esta p=E1gina aos =
amigos';return true"=20
      title=3D"Abre em nova janela"=20
      =
href=3D"http://www.numaboa.com.br/mailMan/indica.php?page=3D/informatica/=
oiciliS/assembler/textos/lingAssembly.php&amp;indica=3DoiciliS - =
Assembly - Textos - A Linguagem Assembly"=20
      target=3D_blank><IMG height=3D10=20
      src=3D"http://www.numaboa.com.br/img/mailto.gif" width=3D14 =
align=3Dbottom=20
      border=3D0> Indique esta p=E1gina</A> | <A=20
      onmouseover=3D"status=3D'Fale com a vov=F3 da Aldeia';return true" =

      title=3D"webmaster - Abre em nova janela"=20
      =
href=3D"http://www.numaboa.com.br/mailMan/contato.php?page=3D/informatica=
/oiciliS/assembler/textos/lingAssembly.php"=20
      target=3D_blank><IMG height=3D10=20
      src=3D"http://www.numaboa.com.br/img/mailto.gif" width=3D14 =
align=3Dbottom=20
      border=3D0> Mestre da Teia</A> | <A=20
      onmouseover=3D"status=3D'Marcha-R=E9';return true" title=3D"Meia =
volta voooolver"=20
      href=3D"javascript:history.back()">Voltar</A> |<BR>| <A=20
      =
href=3D"http://www.numaboa.com.br/foot/localizador.php?file=3Dinfo.txt&am=
p;page=3D/informatica/oiciliS/assembler/textos/lingAssembly.php"=20
      target=3D_blank>Localizador</A> || @ <A=20
      href=3D"http://www.numaboa.com.br/informatica/">Info NumaBoa</A> =
&gt; <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/">oic=ECliS</A> =
&gt; <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/">Assembl=
y</A>=20
      &gt; <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/">=
Textos</A>=20
      &gt; <B>A Linguagem Assembly</B>
      <HR>
      Cr=E9ditos: vov=F3 Vicki<BR><BR>webdesign sobMedida by vickiSoft - =

      /informatica/oiciliS/assembler/textos/lingAssembly.php (06.04.03) =
vers=E3o=20
      1.2 de 02.08.03<BR>Licen=E7a Creative Commons 1998-2005 Aldeia =
NumaBoa<BR><!-- Creative Commons License -->Exceto onde especificamente=20
      declarado, todo material deste site =E9 disponibilizado de acordo =
com a <A=20
      =
href=3D"http://creativecommons.org/licenses/by-nc-sa/2.0/br/deed.pt"=20
      target=3D_blank rel=3Dlicense>Licen=E7a Creative Commons</A>. <!-- =
/Creative Commons License --><!--=0A=
<rdf:RDF xmlns=3D"http://web.resource.org/cc/"=0A=
xmlns:dc=3D"http://purl.org/dc/elements/1.1/"=0A=
xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#">=0A=
<Work rdf:about=3D"">=0A=
<dc:type rdf:resource=3D"http://purl.org/dc/dcmitype/Text" />=0A=
<license =
rdf:resource=3D"http://creativecommons.org/licenses/by-nc-sa/2.0/br/" />=0A=
</Work>=0A=
=0A=
<License =
rdf:about=3D"http://creativecommons.org/licenses/by-nc-sa/2.0/br/">=0A=
<permits rdf:resource=3D"http://web.resource.org/cc/Reproduction" />=0A=
<permits rdf:resource=3D"http://web.resource.org/cc/Distribution" />=0A=
<requires rdf:resource=3D"http://web.resource.org/cc/Notice" />=0A=
<requires rdf:resource=3D"http://web.resource.org/cc/Attribution" />=0A=
<prohibits rdf:resource=3D"http://web.resource.org/cc/CommercialUse" />=0A=
<permits rdf:resource=3D"http://web.resource.org/cc/DerivativeWorks" />=0A=
<requires rdf:resource=3D"http://web.resource.org/cc/ShareAlike" />=0A=
</License>=0A=
</rdf:RDF>=0A=
--></CENTER></DIV></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dpe1 colSpan=3D3></TD></TR></TBODY></TABLE></BODY></HTML>

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/iniAni.gif

R0lGODlhIAAgAOIAADMAZv///wAAAP//AGYz//9mM/+ZZgAAACH/C05FVFNDQVBFMi4wAwEAAAAh
+QQJFAAAACwAAAAAIAAgAAIDQwi63P4wykmrvTjrzbu/QRh8i2iO3nl2qsq1qwa72RyD9l3lOsWb
mJ8oKERZisZdkShk/mpPKG8zpeZYsw+MpAByPQkAIfkECRQAAAAsBgAIABEAGAACA0UIutGxELr5
oqLU4iZEi1vgfUw4kkAoTpeJpeobd6w40g7+cN2Zj7CYbSesbXyO4ASZVHI2JV5I8oRSV9ZrFrS1
KL3gcAIAIfkECRQAAAAsBgAQABEAEAACA0EIujA+LK73ohCTVoDDVc4lVEIABB42XKnDmWjKoiJ7
xnNJ63dM+z4F0DM0CXG6IQNXNC6YRUkTJTkqq88YdltNAAAh+QQJFAAAACwGABAAEQAQAAIDQQi6
MD4srveiEJNWgMNVziVUQgAEHjZcqcOZaMqiInvGc0nrd0z7PgXQMzQJcbohA1c0LphFSRMlOSqr
zxh2W00AACH5BAkUAAAALAYACQARABcAAgNXCLo6wxA6F+O8tV1CXKnXwHmfFXrZ+WSAyk6CMDGx
5sgzIABBDcczQYDXw8WKFCGxeAwwj8uiUzilRp09rHZ4zW650eaXgaWOydOvM6LGZtoshTZOXyQA
ACH5BAkUAAAALAYACQARABcAAgNXCLo6wxA6F+O8tV1CXKnXwHmfFXoacz4L1Z7SKQgTM8sYIAAB
fc2+hyDA6/lmRsqwaEQGmkim8TmkVqXPXnZLxGq5XakTzMhWyWUq+BlZZzPuzGIrr0MSACH5BAkU
AAAALAYACQARABcAAgNXCLo6wxA6F+O8tV1CXKnXwHmfFXoacz4L1Z7SKQgTM8sYIAABfc2+hyDA
6/lmRsqwaEQGmkim8TmkVqXPXnZLxGq5XakTzMhWyWUq+BlZZzPuzGIrr0MSACH5BAkUAAAALAYA
CQASABcAAgNeCLo6wzA6B00EMysrMyFOcWEeOHBXlonNs6gUwMWtusywIEyQnmsAgSKwy+iKD0Fg
SCzqmhQls/kMUJ/TplW55WatRLB4+Q2PydnqGQLmrtnbs/UiB48A9ftCrO9DEgAh+QQJFAAAACwG
AAkAEgAXAAIDXgi6OsMwOgdNBDMrKzMhTnFhHjhwV5aJzbOoFMDFrbrMsCBMkJ5rAIEisMvoig9B
YEgs6poUJbP5DFCf06ZVueVmrUSwePkNj8nZ6hkC5q7Z27P1IgePAPX7QqzvQxIAOw==

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/grafs/logo.gif

R0lGODlhagA5APcAAFqvsWrJ0Gu+02XDxnO342G7vlabsV0W/msX/0mLkDMpaTNaZVGYoFKKs3q0
8ncY/UN4hYgZ+ggJEVekrjgld0pinGWRylJ8pkAkh2tX03GY21p+uREPJluSvi8NZmavyRgrMUg0
nXaT5zNJZVsS6z8TlzgMfkJkhSsrVzlfcGZ8yTw9gCUMSUYRqS49Xmyv13V542lm1UwUu1Y8wSEz
Qmc87VdmsxcJQUBPhE1MnCtPVUwQygAAAFcZ2lJRtnk/6gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAADwALAAAAABqADkA
AAj+AHkIHEiwoEGDHBIYuHCChoSDECNKnEixosWLJwAAMDChQ4cRDy+KHEmypEQOGjV2tGBhAwiT
MGPKjHghJYACH3Jq0OBips+fJHHYZFChgwUCBByIUAC0qdODKFMySHBhgw0VMEQ4cPDyqVegHBhM
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
jjRfr5YZf6QDIMCIPBAQAAA7

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1.gif

R0lGODlhcwAMAPcAAAAAABg5SiFSYzFrjDmMta3nKcbGAP//xv//////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////yH5BAEAAAUALAAAAABzAAwA
AAjRAAMAGDiwgMGDCBMqXMiwocOHDAlKnEixokUABQIQGMBRAEaIIEOKHFkAAIGTKFOqXMkS5YED
GDVy7PiRpM2bIWXO3Mmzp8+dBoLG3LjTI86jSBPq/Mm06YCgQjMSLRqgqtWrWLNq3cq1q9eqU4sK
GEu2rNmzZ4cOqLqzpdu3cOPKVenT48W7F6UGeBnAqd+/gAP7FRAg6UKrBwz0Fcy4sWOehA0f3sj2
seXLg2tKRrgUs+fPM41uVqgRrenTqFOrXm268GjSX2PLnk2b6+uFAQEAOw==

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1a.gif

R0lGODlhcwAMALMAAABrCAhKaxg5SiFSYyFjhDJvjjmMtUqM763nKe/v5wAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAgALAAAAABzAAwAAASdEKlJq734os27/2AojmRoCZKhrmzrvq1SznRtb8pQ7Aaq
7MCgcEgc9m7IpC0XPP6K0KgRpaxaO8ymb8Dter/gMLEnKJvP6LR6zW67BTqhM0OvZ+WwvH7P77OC
ZQVHVx9wUoeIiYqHAgcHAoOEHoaLlZaXQgIFj2WSIHeYoaJRgZGeWHGjqqtapyBwYbGys7S1tmGm
rhxvvL2+v20RAAA7

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/img/haus2.png

iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAMAAAF7D1XuAAAABlBMVEUAAACCkb4DVVPxAAAAAXRS
TlMAQObYZgAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAQlJREFUeNoB/gAB/wAAAAAAAAAAAAAAAQAA
AQABAAABAAEAAAABAAAAAAEAAAEAAAAAAQAAAAAAAAABAQAAAQAAAQAAAAABAAAAAQEAAQEBAAAA
AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAQABAAAAAAAAAQAAAAEAAQEAAAAAAAABAAAAAQAA
AAEBAAAAAAEBAAAAAAAAAAAAAQEAAAAAAQABAQAAAQEBAAEAAAAAAAEAAQEAAAEBAQABAAAAAAAB
AQEBAQEBAQEBAQAAGqcAQv1LH7cAAAAASUVORK5CYII=

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/img/mailto.gif

R0lGODdhDgAKAKIAAP////r7v+rrl8TFDKOkAH1+AElKAAAAACwAAAAADgAKAAADLWi63AQwynEM
KCLrXEgFAraFgmdxm2iCpdhla8mpZRUQo0aYw+7/u8phSCwSEwA7

------=_NextPart_000_0103_01C5C514.9B590F10
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/styleAssembly.css

A {
	COLOR: #00ccff; TEXT-DECORATION: none
}
A:visited {
	COLOR: #cccccc
}
A:hover {
	TEXT-DECORATION: underline overline
}
A:active {
	COLOR: #99ffcc
}
BODY {
	SCROLLBAR-FACE-COLOR: #236282; FONT-SIZE: 10pt; =
SCROLLBAR-HIGHLIGHT-COLOR: #003399; SCROLLBAR-SHADOW-COLOR: #505050; =
COLOR: #ffffff; SCROLLBAR-3DLIGHT-COLOR: #505050; SCROLLBAR-ARROW-COLOR: =
#00ccff; SCROLLBAR-TRACK-COLOR: #084a6b; FONT-FAMILY: Verdana, Arial, =
Helvetica; SCROLLBAR-DARKSHADOW-COLOR: #000000; BACKGROUND-COLOR: =
#084a6b; TEXT-ALIGN: center
}
.borda {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black 1px solid
}
.bordaI {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
PADDING-LEFT: 2em; BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black =
1px solid
}
.bordaCor {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black 1px solid; =
BACKGROUND-COLOR: #006699
}
.bordaCorI {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
PADDING-LEFT: 2em; BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black =
1px solid; BACKGROUND-COLOR: #006699
}
TR.meio1 {
	BACKGROUND-COLOR: #236282
}
TD {
	FONT-SIZE: 10pt; COLOR: #ffffff; FONT-FAMILY: Verdana, Arial, Helvetica
}
TD.cab1 {
	FONT-WEIGHT: bold; BACKGROUND: url(grafs/cab1.gif); COLOR: #00ccff; =
HEIGHT: 32px; TEXT-ALIGN: center
}
TD.cab1a {
	BACKGROUND: url(grafs/cab1a.gif) #006699; WIDTH: 27px
}
TD.pto1 {
	FONT-WEIGHT: bold; HEIGHT: 40px; BACKGROUND-COLOR: #236282
}
TD.pe1 {
	BACKGROUND: url(grafs/pe1.gif); HEIGHT: 18px
}
TD.meio1 {
	BACKGROUND-COLOR: #236282
}
TD.c66CC {
	PADDING-RIGHT: 10px; BACKGROUND-COLOR: #0066cc; TEXT-ALIGN: right
}
HR {
	COLOR: #00ccff; HEIGHT: 1px
}
H1 {
	MARGIN-TOP: 1px; FONT-WEIGHT: bold; FONT-SIZE: 14px; MARGIN-BOTTOM: =
1px; FONT-FAMILY: Verdana, Arial, Helvetica
}
H2 {
	MARGIN-TOP: 0px; FONT-SIZE: xx-small; MARGIN-BOTTOM: 0px; FONT-FAMILY: =
Verdana, Arial, Helvetica
}
H3 {
	MARGIN-TOP: 0px; FONT-SIZE: 9px; MARGIN-BOTTOM: 0px; COLOR: #666666; =
FONT-FAMILY: Verdana, Arial, Helvetica
}
P {
	MARGIN: 10px 50px; TEXT-INDENT: 20pt; TEXT-ALIGN: justify
}
BLOCKQUOTE {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; TEXT-ALIGN: justify
}
PRE {
	MARGIN-TOP: 0px; MARGIN-LEFT: 40pt; FONT-FAMILY: Verdana, Arial, =
Helvetica
}
.asmcode {
	BORDER-RIGHT: #236282 2px dotted; PADDING-RIGHT: 20px; BORDER-TOP: =
#236282 2px dotted; PADDING-LEFT: 20px; FONT-SIZE: 14px; PADDING-BOTTOM: =
20px; MARGIN: 10px 50px; BORDER-LEFT: #236282 2px dotted; COLOR: =
#00ccff; PADDING-TOP: 20px; BORDER-BOTTOM: #236282 2px dotted; =
FONT-FAMILY: "Courier new"; BACKGROUND-COLOR: #337292
}
OL {
	PADDING-RIGHT: 50px; PADDING-LEFT: 50px; TEXT-ALIGN: justify
}
UL {
	PADDING-RIGHT: 50px; PADDING-LEFT: 50px; TEXT-ALIGN: justify
}

------=_NextPart_000_0103_01C5C514.9B590F10--
