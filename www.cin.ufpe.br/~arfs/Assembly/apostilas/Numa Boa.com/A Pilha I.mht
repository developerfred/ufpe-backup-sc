From: <Saved by Microsoft Internet Explorer 5>
Subject: =?Windows-1252?Q?A_Pilha_=28I=29_-_oic=ECliS_=A9?=
Date: Thu, 29 Sep 2005 16:39:40 -0300
MIME-Version: 1.0
Content-Type: multipart/related;
	boundary="----=_NextPart_000_00BB_01C5C514.637580B0";
	type="text/html"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1506

This is a multi-part message in MIME format.

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/stack1.php

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- =A9sobMedida by vickiSoft 09.04.03 ver 1.0 --><!-- 02.08.03 ver 1.1 =
- referElo --><HTML><HEAD><TITLE>A Pilha (I) - oic=ECliS =A9</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1"><LINK=20
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/styleAsse=
mbly.css"=20
type=3Dtext/css rel=3Dstylesheet>
<META content=3D"oiciliS - Assembly para Iniciantes; a pilha (1)"=20
name=3Ddescription>
<META content=3D"tutorial, tutoriais, assembly, assembler, pilha, stack" =

name=3Dkeywords>
<META content=3D"MSHTML 6.00.2800.1515" name=3DGENERATOR></HEAD>
<BODY>
<TABLE cellSpacing=3D0 cellPadding=3D0 width=3D750 align=3Dcenter>
  <TBODY>
  <TR>
    <TD class=3Dcab1 colSpan=3D3><IMG height=3D32=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/iniA=
ni.gif"=20
      width=3D32 align=3DabsMiddle border=3D0> A PILHA</TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <TABLE cellSpacing=3D20 align=3Dleft>
        <TBODY>
        <TR>
          <TD align=3Dmiddle><A=20
            =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/index.php"><IMG=20
            height=3D57 alt=3D"Sil=EDcio Reverso"=20
            =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/grafs/logo.gif"=20
            width=3D106 border=3D0></A>oic=ECliS =A9<BR>Assembly para=20
            Iniciantes<BR>TEXTOS ACESS=D3RIOS<BR><FONT size=3D-2>(ver =
1.1 de=20
            02.08.03)</FONT> </TD></TR></TBODY></TABLE>
      <P>Todos os programas fazem uso intensivo da pilha em tempo de =
execu=E7=E3o.=20
      Quando se programa usando uma linguagem de alto n=EDvel, este =
aspecto passa=20
      batido e a gente nem toma conhecimento do assunto. Um programador=20
      assembler, no entanto, precisa ficar esperto porque a pilha =E9 =
uma das=20
      ferramentas mais importantes que ele tem =E0 sua disposi=E7=E3o. =
Saber trabalhar=20
      com a pilha =E9 uma enorme vantagem, apesar de n=E3o ser =
indispens=E1vel. Em=20
      todo caso, sempre =E9 bom ter uma no=E7=E3ozinha da coisa.</P>
      <P>O assunto =E9 um tanto extenso de modo que foi melhor dividi-lo =
em duas=20
      partes. Neste primeiro bloco abordaremos os seguintes =
assuntos:</P>
      <UL>
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#vantagem">Caracter=EDsticas=20
        e vantagens da pilha</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#pratica">A=20
        pilha na pr=E1tica</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#esp">Ponteiro=20
        da pilha: o registrador ESP</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#dados">Armazenando=20
        e retirando dados da pilha</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#func">Preservando=20
        valores de registradores em fun=E7=F5es</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#mem">Preservando=20
        dados da mem=F3ria</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#transf">Transferindo=20
        dados sem usar registradores</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#revert">Revertendo=20
        a ordem de dados</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#call">Como=20
        CALL e RET usam a pilha</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#equil">A=20
        import=E2ncia do equil=EDbrio da pilha</A>=20
        <LI><A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#param">Usando=20
        a pilha para passar par=E2metros</A> </LI></UL>
      <P>Ufa! =C9 isso a=ED. Vamos ao trabalho.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dvantagem></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Caracter=EDsticas e =
vantagens da=20
pilha</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>A pilha =E9 basicamente uma =E1rea de dwords (=E1rea de dados =
de 32 bits)=20
      existente na mem=F3ria em tempo de execu=E7=E3o na qual seu =
aplicativo pode=20
      armazenar dados temporariamente. Possui certas caracter=EDsticas e =
vantagens=20
      reais em rela=E7=E3o a outros tipos de armazenamento na mem=F3ria =
(se=E7=E3o de=20
      dados e =E1reas de mem=F3ria em tempo de execu=E7=E3o). S=E3o =
elas:</P>
      <UL>
        <LI>O processador =E9 muito veloz no acesso =E0 pilha, tanto =
para escrever=20
        quanto para ler, porque =E9 otimizado para esta tarefa.=20
        <LI>As instru=E7=F5es muito simples de PUSH e POP podem ser =
usadas para=20
        escrever e ler na pilha. Estas instru=E7=F5es s=E3o muito =
compactas, possuindo=20
        apenas um byte quando usam registradores ou cinco bytes quando =
usam=20
        marcadores (labels) de mem=F3ria ou ponteiros para endere=E7os =
de mem=F3ria.=20
        <LI>No Windows, a pilha =E9 ampliada em blocos de 4K em tempo de =
execu=E7=E3o.=20
        Isto evita desperd=EDcio de mem=F3ria. </LI></UL></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dpratica></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> A pilha na =
pr=E1tica</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>A pilha pode ser usada para:</P>
      <UL>
        <LI>Preservar valores de registradores em fun=E7=F5es (<A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#func">exemplo</A>)=20

        <LI>Preservar dados da mem=F3ria (<A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#mem">exemplo</A>)=20

        <LI>Transferir dados sem usar registradores (<A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#transf">exemplo</A>)=20

        <LI>Reverter a ordem de dados (<A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#revert">exemplo</A>)=20

        <LI>Chamar outras fun=E7=F5es e depois retornar (<A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#call">exemplo</A>)=20

        <LI>Passar par=E2metros para fun=E7=F5es (<A=20
        =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack1.php#param">exemplo</A>)=20
        </LI></UL></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Desp></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Ponteiro da pilha: o =
registrador=20
ESP</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>O registrador ESP (acr=F4nimo de "extended stack pointer") =
cont=E9m o topo=20
      da pilha. Este =E9 o ponto usado pelas instru=E7=F5es que utilizam =
a pilha=20
      (PUSH, POP, CALL e RET). Adiante falaremos mais sobre o =
assunto.</P>
      <P>Normalmente o programador faz o registrador EBP (acr=F4nimo de =
"extended=20
      base pointer") apontar para um determinado lugar da pilha de modo =
que seus=20
      dados possam ser lidos ou escritos usando um endere=E7amento com =
base=20
      indexada. Por exemplo, na instru=E7=E3o MOV EAX,[EBP+8h], o =
registrador EBP =E9=20
      usado como um =EDndice para uma =E1rea da pilha e esta =
instru=E7=E3o ir=E1=20
      transferir da pilha para o registrador EAX um dword situado 8 =
bytes=20
      adiante. A origem do uso do registrador EBP associado =E0 pilha =
=E9 da =E9poca=20
      dos sistemas de 16 bits, com toda a complica=E7=E3o de segmentos e =
outros que=20
      tais. Nos sistemas de 32 bits n=E3o =E9 necess=E1rio manter esta =
associa=E7=E3o e o=20
      registrador EBP pode ser utilizado como um registrador de uso =
geral.=20
      Apenas por h=E1bito ele continua sendo usado para endere=E7ar =
determinadas=20
      =E1reas da pilha, principalmente para acessar par=E2metros =
passados para=20
      fun=E7=F5es e rotinas de callback e para endere=E7ar dados =
locais.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Ddados></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Armazenando e retirando =
dados da=20
    pilha</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>A pilha pode ser imaginada como uma pilha de pratos. Isto =
funciona na=20
      base de "=FAltimo a entrar, primeiro a sair". O =FAltimo prato =
colocado na=20
      pilha usando uma instru=E7=E3o PUSH ser=E1 o primeiro a ser =
retirado com uma=20
      instru=E7=E3o POP. O ponteiro da pilha em ESP sempre aponta para =
este prato no=20
      topo.</P>
      <P>Voltando ao computador. Suponha que o valor de ESP seja 64FE3Ch =
e que=20
      voc=EA tenha as seguintes instru=E7=F5es no seu c=F3digo =
fonte:</P><PRE class=3Dasmcode>PUSH 2
PUSH [hWnd]
PUSH ADDR STRING
</PRE>
      <P>Ap=F3s estas tr=EAs instru=E7=F5es, ESP estaria com o valor =
64FE30h (12 bytes=20
      ou 3 dwords a menos) e a pilha teria o seguinte aspecto:</P>
      <TABLE width=3D450 align=3Dcenter>
        <TBODY>
        <TR align=3Dmiddle>
          <TD>ESP est=E1 aqui -&gt;</TD>
          <TD class=3DbordaCor>64FE30h</TD>
          <TD>endere=E7o de STRING</TD></TR>
        <TR align=3Dmiddle>
          <TD></TD>
          <TD class=3DbordaCor>64FE34h</TD>
          <TD>valor de hWnd</TD></TR>
        <TR align=3Dmiddle>
          <TD></TD>
          <TD class=3DbordaCor>64FE38h</TD>
          <TD>n=FAmero 2</TD></TR>
        <TR align=3Dmiddle>
          <TD></TD>
          <TD class=3DbordaCor>64FE3Ch</TD>
          <TD></TD></TR></TBODY></TABLE>
      <P>Observe que cada instru=E7=E3o PUSH diminui o valor de ESP em 4 =
bytes.</P>
      <P>Observe tamb=E9m que, uma vez que ESP aponta para o =FAltimo =
dword PUSHado=20
      para a pilha, o pr=F3ximo PUSH vai escrever em ESP-4h. Isto =E9 =
feito pelo=20
      processador que reduz o ESP em quatro e depois escreve o dword no =
endere=E7o=20
      que ESP cont=E9m.</P>
      <P>Agora vamos ver como se comporta o POP. Usando os mesmos =
valores da=20
      pilha, usaremos as seguintes instru=E7=F5es:</P><PRE =
class=3Dasmcode>POP EAX
POP EBX
POP ECX
</PRE>
      <P>Despois destas tr=EAs instru=E7=F5es a pilha ter=E1 o seguinte =
aspecto:</P>
      <TABLE width=3D450 align=3Dcenter>
        <TBODY>
        <TR align=3Dmiddle>
          <TD></TD>
          <TD class=3DbordaCor>64FE30h</TD>
          <TD>endere=E7o de STRING -&gt; EAX</TD></TR>
        <TR align=3Dmiddle>
          <TD></TD>
          <TD class=3DbordaCor>64FE34h</TD>
          <TD>valor de hWnd -&gt; EBX</TD></TR>
        <TR align=3Dmiddle>
          <TD></TD>
          <TD class=3DbordaCor>64FE38h</TD>
          <TD>n=FAmero 2 -&gt; ECX</TD></TR>
        <TR align=3Dmiddle>
          <TD>ESP est=E1 aqui -&gt;</TD>
          <TD class=3DbordaCor>64FE3Ch</TD>
          <TD></TD></TR></TBODY></TABLE>
      <P>A primeira coisa a ser observada =E9 que, ap=F3s estas tr=EAs =
instru=E7=F5es, o=20
      ESP est=E1 de volta em 64FE3Ch. Isto significa que o equil=EDbrio =
de ESP foi=20
      restaurado. Este =E9 um conceito muito importante (veja logo =
abaixo).</P>
      <P>O registrador EAX agora cont=E9m o endere=E7o de STRING, o EBX =
cont=E9m o=20
      valor de hWnd e o ECX cont=E9m o n=FAmero 2. Percebe-se que os =
dados=20
      armazenados na pilha foram retirados pelo POP na ordem inversa em =
que=20
      foram colocados.</P>
      <P>Observe tamb=E9m que os dados da pilha continuam presentes. =
Isto acontece=20
      porque a instru=E7=E3o POP n=E3o escreve na pilha. Ela apenas l=EA =
os dados da=20
      pilha e os transfere para a segunda parte da instru=E7=E3o =
(chamada de=20
      "operando").</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dfunc></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Preservando valores de =
registradores=20
      em fun=E7=F5es</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Programas escritos em Assembly s=E3o r=E1pidos porque usam os =
registradores=20
      ao m=E1ximo. Entretanto isto exige que muitas vezes os valores dos =

      registradores precisem ser preservados para uso futuro. Por =
exemplo,=20
      umagine que um manipulador de arquivo (handle) esteja em EDI e =
que, ap=F3s=20
      alguns c=E1lculos com a ajuda de EDI, voc=EA tenha que fechar o =
manipulador.=20
      Para preserv=E1-lo pode-se fazer o seguinte:</P><PRE =
class=3Dasmcode>PUSH EDI                ;salva o manipulador de arquivo
CALL CALCULA            ;faz alguns c=E1lculos (usando EDI)
POP EDI                 ;recupera o manipulador de arquivo
CALL CLOSE_FILEHANDLE   ;fecha o manipulador contido em EDI
</PRE>
      <P>Uma outra alternativa =E9 preservar o EDI dentro do =
procedimento=20
      CALCULA:</P><PRE class=3Dasmcode>CALL CALCULA            ;faz =
alguns c=E1lculos (salva EDI)
CALL CLOSE_FILEHANDLE   ;fecha o manipulador contido em EDI

CALCULATE:
PUSH EDI                ;salva o manipulador de arquivo
.
.                       ;c=F3digo usando EDI
.
POP EDI                 ;recupera o manipulador de arquivo
RET
</PRE>
      <P>Outra raz=E3o para um registrador ser preservado =E9 quando uma =
fun=E7=E3o em=20
      particular =E9 chamada externamente (por outra fun=E7=E3o no mesmo =
programa, por=20
      outro programa ou pelo sistema). Na maioria dos casos deve-se =
garantir que=20
      EBP, EBX, EDI e ESI sejam preservados. Programas em C ou Delphi =
que chamem=20
      rotinas em Assembly e procedimentos callback chamados pelo =
pr=F3prio Windows=20
      com certeza exigem esta preserva=E7=E3o. Um exemplo de =
procedimento callback =E9=20
      um procedimento de uma janela que =E9 usada pelo sistema para =
passar=20
      informa=E7=F5es para uma janela de um aplicativo. Nestas =
circunst=E2ncias =E9=20
      necess=E1rio garantir os valores dos registradores usando, por =
exemplo:</P><PRE class=3Dasmcode>PUSH EBP,EBX,EDI,ESI
.
.                       ;seu c=F3digo vai aqui
.
POP ESI,EDI,EBX,EBP
</PRE>
      <P>=C9 =F3bvio que, se estes registradores n=E3o forem modificados =
pelo c=F3digo,=20
      alguns PUSH e POP n=E3o s=E3o necess=E1rios. Mesmo assim, =E9 uma =
boa pr=E1tica=20
      garantir a preserva=E7=E3o dos seus valores - o seguro morreu de =
velho. Note=20
      que os POP est=E3o na ordem inversa dos PUSH - isto =E9 para =
respeitar o=20
      "=FAltimo a entrar, primeiro a sair" da pilha. Observe tamb=E9m =
que os=20
      registradores est=E3o em ordem alfab=E9tica. =C9 um pequeno truque =
para n=E3o=20
      esquecer nenhum deles.</P>
      <P>Caso voc=EA esteja trabalhando com o GoAsm, a declara=E7=E3o =
USES preserva e=20
      restaura automaticamente todos os registradores.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dmem></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Preservando dados da =
mem=F3ria</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Da mesma forma que =E9 poss=EDvel preservadar valores de =
registradores=20
      usando a pilha, pode-se tamb=E9m preservar dados da mem=F3ria. =
Suponha que=20
      voc=EA tenha calculado cuidadosamente o n=FAmero de widgets e quer =
escrever os=20
      detalhes dos widgets na tela al=E9m de grav=E1-los em arquivo. =
Voc=EA pode usar=20
      o seguinte c=F3digo:</P><PRE class=3Dasmcode>PUSH [NOOF_WIDGETS]  =
;guardar n=FAmero de widgets
L2:
CALL REPORT_WIDGET   ;escrever detalhes do widget na tela
DEC D[NOOF_WIDGETS]  ;decrementar o n=FAmero de widgets
JNZ L2               ;continuar com o pr=F3ximo enquanto n=E3o for zero
POP [NOOF_WIDGETS]   ;restaurar o n=FAmero de widgets
CALL WRITETO_FILE    ;e gravar em arquivo
</PRE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dtransf></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Transferindo dados sem =
usar=20
      registradores</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Suponha que voc=EA queira transferir o n=FAmero de widgets para =
um outro=20
      marcador (label) de mem=F3ria. Voc=EA poderia usar:</P><PRE =
class=3Dasmcode>MOV EAX,[NOOF_WIDGETS]
MOV [COPYOF_NOOF_WIDGETS],EAX
</PRE>
      <P>Igualmente efeiciente seria:</P><PRE class=3Dasmcode>PUSH =
[NOOF_WIDGETS]
POP [COPYOF_NOOF_WIDGETS]
</PRE>
      <P>Como esta segunda op=E7=E3o n=E3o faz uso do registrador EAX, =
este=20
      registrador n=E3o perderia seu valor e poderia ser utilizado para =
outra=20
      finalidade.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Drevert></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Revertendo a ordem de =
dados</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Voc=EA pode tirar vantagem da caracter=EDstica "=FAltimo a =
entrar, primeiro a=20
      sair" da pilha para inverter a ordem de dados. Um exemplo muito =
pr=E1tico =E9=20
      escrever na tela um valor decimal. Neste exemplo, EAX cont=E9m o =
valor que=20
      deve ser escrito e EDI cont=E9m a posi=E7=E3o de mem=F3ria do =
buffer que abrigar=E1=20
      a string:</P><PRE class=3Dasmcode>XOR EDX,EDX        ;zera edx
XOR ECX,ECX        ;zera ecx (usado como contador)
MOV EBX,10         ;ebx guarda sempre o valor 10
L2:
DIV EBX            ;divide edx:eax por 10
				quociente em eax, resto em edx
PUSH EDX           ;p=F5e resultado na pilha
INC ECX            ;conta quantos foram feitos
XOR EDX,EDX        ;zera edx
CMP EAX,EDX        ;v=EA se h=E1 mais para ser feito
JNZ L2             ;sim
L3:                ;agora reverter a ordem dos d=EDgitos
POP EAX            ;pega o pr=F3ximo da pilha
ADD AL,48          ;converte para n=FAmero ascii
STOSB              ;escreve n=FAmero ascii no buffer
LOOP L3            ;continua enquanto ecx for diferente de zero
</PRE>
      <P>Vamos analisar este c=F3digo. Imagine que o valor em EAX seja =
123=20
      decimal. A primeira divis=E3o por dez p=F5e 12 em EAX e 3 em EDX. =
3 =E9 colocado=20
      na pilha. A segunda divis=E3o por dez p=F5e 1 em EAX e 2 em EDX. 2 =
=E9 colocado=20
      na pilha. A terceira divis=E3o por dez p=F5e zero em EAX e 1 em =
EDX. 1 =E9=20
      colocado na pilha. O resultado de CMP EAX,EDX ent=E3o =E9 zero e o =
c=F3digo=20
      desvia para o marcador L3. ECX agora est=E1 com 3 porque contou o =
n=FAmero de=20
      d=EDgitos. Agora cada um deles =E9 retirado da pilha e adicionado =
a 48. Para=20
      1, 2 e 3 obtemos respectivamente 49, 50 e 51. Estes valores s=E3o=20
      transferidos para o buffer e correspondem aos caracteres ascii =
"1", "2", e=20
      "3" - na sequ=EAncia correta e prontos para, mais tarde, serem =
escritos na=20
      tela.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dcall></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Como CALL e RET usam a =
pilha</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>A instru=E7=E3o CALL =E9 muito usada em programa=E7=E3o. =C9 =
utilizada para desviar=20
      a execu=E7=E3o para um procedimento (ou "fun=E7=E3o") em =
particular. Quando o=20
      procedimento termina, a execu=E7=E3o continua logo ap=F3s a linha =
da chamada.=20
      Chamando procedimentos ajuda a manter o c=F3digo fonte limpo e =
=F3bvio, por=20
      exemplo:</P><PRE class=3Dasmcode>401020: MOV EAX,EDX
401022: CALL CALCULATE_ASSETS
401027: MOV [ASSETS],EAX      ;p=F5e resultado da chamada na mem=F3ria
</PRE>
      <P>N=E3o h=E1 d=FAvida de que o procedimento CALCULATE_ASSETS deve =
realizar um=20
      trabalho extenso por=E9m, neste ponto do c=F3digo, n=E3o h=E1 a =
necessidade de se=20
      preocupar com isso. Usando calls tamb=E9m ajuda a manter o =
c=F3digo modular. O=20
      procedimento CALCULATE_ASSETS tamb=E9m pode ser usado por outros =
programas.=20
      Se quiser, pode consider=E1-lo como um "objeto". A programa=E7=E3o =
orientada a=20
      objeto =E9 basicamente esta.</P>
      <P>Como =E9 que o processador sabe onde continuar o processamento =
depois de=20
      uma chamada? Muito simples: ele coloca o endere=E7o de retorna na =
pilha!</P>
      <P>Vamos dar uma olhada na pilha no momento em que acontece uma =
chamada.=20
      Imagine que o valor de ESP seja 64FE3Ch e que o c=F3digo fonte =
seja o=20
      indicado acima. Ap=F3s a primeira instru=E7=E3o, =E9 claro que ESP =
ainda est=E1 em=20
      64FE3Ch e a pilha n=E3o foi modificada porque ela n=E3o =E9 =
afetada pela=20
      instru=E7=E3o MOV. Mas quando a instru=E7=E3o CALL =
CALCULATE_ASSETS =E9 executada, o=20
      processador PUSHa para a pilha o endere=E7o de retorno 401027h. =
Bem, no=20
      procedimento CALCULATE_ASSETS existe uma instru=E7=E3o RET =
(retornar ao=20
      chamador), por exemplo:</P><PRE class=3Dasmcode>CALCULATE_ASSETS:
                        ;um monte de c=F3digo aqui
RET                     ;retornar ao chamador
</PRE>
      <P>A instru=E7=E3o RET causa um POP para EIP. Em outras palavra, =
seja o que=20
      for que estiver em [ESP] =E9 atribu=EDdo a EIP (o ponteiro de =
instru=E7=F5es) e=20
      depois ESP =E9 incrementado em 4 bytes.</P>
      <P>Vamos observar o que acontece com a pilha antes, durante e =
depois=20
      destas instru=E7=F5es. Note como o equil=EDbrio do ESP =E9 =
restaurado:</P>
      <TABLE cellSpacing=3D1 width=3D550 align=3Dcenter bgColor=3Dblack>
        <TBODY>
        <TR align=3Dmiddle bgColor=3D#006699>
          <TD>Antes da Chamada</TD>
          <TD>Durante a Chamada</TD>
          <TD>Depois da Chamada</TD></TR>
        <TR class=3Dmeio1>
          <TD>
            <TABLE>
              <TBODY>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE30h</TD></TR>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE34h</TD></TR>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE38h</TD></TR>
              <TR>
                <TD>ESP -&gt;</TD>
                <TD =
class=3DbordaCor>64FE3Ch</TD></TR></TBODY></TABLE></TD>
          <TD align=3Dmiddle>
            <TABLE>
              <TBODY>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE30h</TD>
                <TD></TD></TR>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE34h</TD>
                <TD></TD></TR>
              <TR>
                <TD>ESP -&gt;</TD>
                <TD class=3DbordaCor>64FE38h</TD>
                <TD>401027h</TD></TR>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE3Ch</TD>
                <TD></TD></TR></TBODY></TABLE></TD>
          <TD align=3Dmiddle>
            <TABLE>
              <TBODY>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE30h</TD>
                <TD></TD></TR>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE34h</TD>
                <TD></TD></TR>
              <TR>
                <TD></TD>
                <TD class=3DbordaCor>64FE38h</TD>
                <TD>401027h</TD></TR>
              <TR>
                <TD>ESP -&gt;</TD>
                <TD class=3DbordaCor>64FE3Ch</TD>
                =
<TD></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dequil></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> A import=E2ncia do =
equil=EDbrio da=20
pilha</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>Vimos como um procedimento pode ser chamado e o endere=E7o de =
retorno =E9=20
      mantido na pilha. Acontece que, com frequ=EAncia, procedimentos =
chamam=20
      outros procedimentos que chamam outros procedimentos... e assim =
por=20
      diante. Podemos ter, por exemplo:</P><PRE =
class=3Dasmcode>CALCULATE_ASSETS:
CALL CALCULATE_FIXEDASSETS
RET                     ;retorna ao chamador

CALCULATE_FIXEDASSETS:
                        ;uma por=E7=E3o de c=F3digo
CALL GET_COSTVALUES
CALL ADJUSTFOR_DEPRECIATION
ADD ESP,4               ;<B>tira o equil=EDbrio de ESP</B>
RET
</PRE>
      <P>Neste exemplo, a tarefa =E9 dividida em v=E1rios componentes. =
Imagine que o=20
      procedimento CALCULATE_FIXEDASSETS adicione 4 a ESP por engano. Se =
isto=20
      acontecer, quando a instru=E7=E3o RET for executada, o ponteiro de =
instru=E7=F5es=20
      EIP estar=E1 carregado com um valor errado e o programa vai dar =
pau.</P>
      <P>Enquanto um procedimento estiver sendo executado =E9 comum que =
o ESP seja=20
      deslocado (por exemplo, quando =E9 preciso abrir um espa=E7o na =
pilha), mas =E9=20
      de vital import=E2ncia assegurar que o equil=EDbrio da pilha seja =
restaurado=20
      assim que o procedimento estiver no fim.</P>
      <P>O equil=EDbrio da pilha tamb=E9m =E9 importante ao retornar =
para o Windows,=20
      mesmo num programinha min=FAsculo. O aplicativo Windows mais =
simples=20
      poss=EDvel, que n=E3o faz absolutamente nada, =E9 o =
seguinte</P><PRE class=3Dasmcode>START:
RET
</PRE>
      <P>onde START =E9 a entrada do aplicativo. Na realidade, o Windows =

      normalmente chama seu aplicativo atrav=E9s da Kernel32.dll de modo =
que um=20
      simples RET termina o programa alegremente sem maiores =
problemas.</P></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a><A name=3Dparam></A></TD>
    <TD class=3Dpto1><IMG height=3D12=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1=
.gif"=20
      width=3D115 align=3DabsMiddle border=3D0> Usando a pilha para =
passar=20
    par=E2metros</TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1>
      <P>As APIs do Windows esperam receber par=E2metros atrav=E9s da =
pilha.=20
      Portanto, quando chamamos uma API, =E9 necess=E1rio PUSHar os =
par=E2metros=20
      necess=E1rios para que estes possam ser resgatados pela =
API.</P><PRE class=3Dasmcode>PUSH 1,[hButton]
CALL EnableWindow       ;habilitar bot=E3o
</PRE>
      <P>Inicialmente colocamos o valor 1 (flag ENABLE) na pilha, =
seguido pelo=20
      manipulador da janela que quermos habilitar. O Windows usa a =
conven=E7=E3o de=20
      chamada padr=E3o "C" para suas APIs de modo que, ao retornar da =
API, a pilha=20
      estar=E1 novamente em equil=EDbrio. A conven=E7=E3o tamb=E9m =
significa que EBP, EBX,=20
      ESI e EDI sempre s=E3o restaurados pela API.</P>
      <P>Outro aspecto da conven=E7=E3o =E9 que os par=E2metros s=E3o =
sempre PUSHados da=20
      direita para a esquerda (ou do =FAltimo para o primeiro). As =
especifica=E7=F5es=20
      para a fun=E7=E3o <I>EnableWindow</I> no Windows Software =
Development Kit=20
      s=E3o:</P><PRE>	WINAPI
	EnableWindow(
    	HWND hWnd,
	    BOOL bEnable);
</PRE>
      <P>Para traduzir para Assembly, =E9 preciso ler do fim para o =
come=E7o. A=20
      coisa fica um pouco mais f=E1cil se usarmos a instru=E7=E3o INVOKE =
ao inv=E9s de=20
      CALL. Neste caso, a ordem dos par=E2metros =E9 a mesma do =
SDK:</P><PRE class=3Dasmcode>INVOKE EnableWindow, [hButton], 1
</PRE><BR></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dpe1 colSpan=3D3></TD></TR></TBODY></TABLE><BR><BR>
<TABLE cellSpacing=3D0 width=3D650 align=3Dcenter>
  <TBODY>
  <TR>
    <TD class=3Dmeio1><IMG height=3D21=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto2=
.gif"=20
      width=3D115 border=3D0> UFA!!!</TD></TR>
  <TR>
    <TD class=3Dmeio1>
      <P>Foi muito pra cabe=E7a? Espero que n=E3o. Entender o =
funcionamento da=20
      pilha, a meu ver, =E9 essencial para produzir programas de =
qualidade. E=20
      ainda tem mais no n=EDvel intermedi=E1rio. Se quiser continuar com =
o assunto=20
      leia <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/st=
ack2.php">A=20
      Pilha II</A>.</P>
      <P>N=E3o posso deixar de agradecer Jeremy Gordon pelos seus =
excelentes=20
      artigos sobre a pilha. O presente texto =E9 (praticamente) apenas =
a tradu=E7=E3o=20
      de <A title=3D" Link externo "=20
      href=3D"http://www.jorgon.freeserve.co.uk/GoasmHelp/usstack1.htm"=20
      target=3D_blank><I>Understand the stack (part 1)</I></A> do =
referido=20
      autor.</P></TD></TR>
  <TR>
    <TD align=3Dright bgColor=3D#236282><IMG height=3D21=20
      =
src=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto2=
a.gif"=20
      width=3D115 border=3D0></TD></TR></TBODY></TABLE><BR><BR>
<TABLE cellSpacing=3D0 cellPadding=3D0 width=3D750 align=3Dcenter>
  <TBODY>
  <TR>
    <TD class=3Dcab1 colSpan=3D3>Localizador</TD></TR>
  <TR>
    <TD class=3Dcab1a></TD>
    <TD class=3Dmeio1 align=3Dmiddle>
      <SCRIPT language=3DJavaScript>=0A=
function setFontSize(fontVal) {=0A=
var fontSet =3D document.getElementById('fontSet');=0A=
var docBase =3D new Array(); docBase =3D =
document.getElementsByTagName('table');=0A=
if (!fontVal) {fontVal =3D document.getElementById('fontSet').value;}=0A=
var docSize =3D fontVal+'pt';=0A=
for(var i=3D0;i<docBase.length;i++)=0A=
docBase[i].style.fontSize =3D docSize;=0A=
var docBase =3D new Array(); docBase =3D =
document.getElementsByTagName('body');=0A=
docBase[0].style.fontSize =3D docSize;=0A=
docSize =3D (fontVal-2)+'pt';=0A=
document.getElementById('xxpe').style.fontSize =3D docSize;=0A=
if (fontSet) {fontSet.value =3D fontVal;}=0A=
}=0A=
</SCRIPT>

      <DIV id=3Dxxpe style=3D"FONT-SIZE: 8pt">
      <HR>

      <CENTER>| <A href=3D"javascript:setFontSize(15)"><SPAN=20
      style=3D"FONT-SIZE: 15pt">A</SPAN></A><A=20
      href=3D"javascript:setFontSize(13)"><SPAN=20
      style=3D"FONT-SIZE: 13pt">A</SPAN></A><A=20
      href=3D"javascript:setFontSize(11)"><SPAN=20
      style=3D"FONT-SIZE: 11pt">A</SPAN></A><A=20
      href=3D"javascript:setFontSize(9)"><SPAN style=3D"FONT-SIZE: =
9pt">A</SPAN></A>=20
      | <A=20
      onmouseover=3D"status=3D'A Aldeia onde as coisas acontecem =
numaboa';return true"=20
      href=3D"http://www.numaboa.com.br/index.php"><IMG height=3D15=20
      alt=3D"P=E1gina Inicial" =
src=3D"http://www.numaboa.com.br/img/haus2.png"=20
      width=3D15 align=3Dbottom border=3D0></A> | <A=20
      onmouseover=3D"status=3D'Saiba o que a Aldeia tem para =
oferecer';return true"=20
      title=3D"Mapa do site"=20
      href=3D"http://www.numaboa.com.br/aldeia/index.php">Mapa do =
Site</A> | <A=20
      onmouseover=3D"status=3D'Fique por dentro das novidades';return =
true"=20
      title=3D"Novidades na Aldeia"=20
      =
href=3D"http://www.numaboa.com.br/aldeia/destaques.php">Novidades</A> | =
<A=20
      onmouseover=3D"status=3D'Procure na Aldeia';return true"=20
      title=3D"Abre em nova janela"=20
      href=3D"http://www.numaboa.com.br/portal/index.php" =
target=3D_blank>Busca</A>=20
      | <A onmouseover=3D"status=3D'Indique esta p=E1gina aos =
amigos';return true"=20
      title=3D"Abre em nova janela"=20
      =
href=3D"http://www.numaboa.com.br/mailMan/indica.php?page=3D/informatica/=
oiciliS/assembler/textos/stack1.php&amp;indica=3DoiciliS - Assembly - =
Textos - A Pilha"=20
      target=3D_blank><IMG height=3D10=20
      src=3D"http://www.numaboa.com.br/img/mailto.gif" width=3D14 =
align=3Dbottom=20
      border=3D0> Indique esta p=E1gina</A> | <A=20
      onmouseover=3D"status=3D'Fale com a vov=F3 da Aldeia';return true" =

      title=3D"webmaster - Abre em nova janela"=20
      =
href=3D"http://www.numaboa.com.br/mailMan/contato.php?page=3D/informatica=
/oiciliS/assembler/textos/stack1.php"=20
      target=3D_blank><IMG height=3D10=20
      src=3D"http://www.numaboa.com.br/img/mailto.gif" width=3D14 =
align=3Dbottom=20
      border=3D0> Mestre da Teia</A> | <A=20
      onmouseover=3D"status=3D'Marcha-R=E9';return true" title=3D"Meia =
volta voooolver"=20
      href=3D"javascript:history.back()">Voltar</A> |<BR>| <A=20
      =
href=3D"http://www.numaboa.com.br/foot/localizador.php?file=3Dinfo.txt&am=
p;page=3D/informatica/oiciliS/assembler/textos/stack1.php"=20
      target=3D_blank>Localizador</A> || @ <A=20
      href=3D"http://www.numaboa.com.br/informatica/">Info NumaBoa</A> =
&gt; <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/">oic=ECliS</A> =
&gt; <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/">Assembl=
y</A>=20
      &gt; <A=20
      =
href=3D"http://www.numaboa.com.br/informatica/oiciliS/assembler/textos/">=
Textos</A>=20
      &gt; <B>A Pilha</B>
      <HR>
      Cr=E9ditos: vov=F3 Vicki<BR><BR>webdesign sobMedida by vickiSoft - =

      /informatica/oiciliS/assembler/textos/stack1.php (09.04.03) =
vers=E3o 1.1 de=20
      02.08.03<BR>Licen=E7a Creative Commons 1998-2005 Aldeia =
NumaBoa<BR><!-- Creative Commons License -->Exceto onde especificamente=20
      declarado, todo material deste site =E9 disponibilizado de acordo =
com a <A=20
      =
href=3D"http://creativecommons.org/licenses/by-nc-sa/2.0/br/deed.pt"=20
      target=3D_blank rel=3Dlicense>Licen=E7a Creative Commons</A>. <!-- =
/Creative Commons License --><!--=0A=
<rdf:RDF xmlns=3D"http://web.resource.org/cc/"=0A=
xmlns:dc=3D"http://purl.org/dc/elements/1.1/"=0A=
xmlns:rdf=3D"http://www.w3.org/1999/02/22-rdf-syntax-ns#">=0A=
<Work rdf:about=3D"">=0A=
<dc:type rdf:resource=3D"http://purl.org/dc/dcmitype/Text" />=0A=
<license =
rdf:resource=3D"http://creativecommons.org/licenses/by-nc-sa/2.0/br/" />=0A=
</Work>=0A=
=0A=
<License =
rdf:about=3D"http://creativecommons.org/licenses/by-nc-sa/2.0/br/">=0A=
<permits rdf:resource=3D"http://web.resource.org/cc/Reproduction" />=0A=
<permits rdf:resource=3D"http://web.resource.org/cc/Distribution" />=0A=
<requires rdf:resource=3D"http://web.resource.org/cc/Notice" />=0A=
<requires rdf:resource=3D"http://web.resource.org/cc/Attribution" />=0A=
<prohibits rdf:resource=3D"http://web.resource.org/cc/CommercialUse" />=0A=
<permits rdf:resource=3D"http://web.resource.org/cc/DerivativeWorks" />=0A=
<requires rdf:resource=3D"http://web.resource.org/cc/ShareAlike" />=0A=
</License>=0A=
</rdf:RDF>=0A=
--></CENTER></DIV></TD>
    <TD class=3Dcab1a></TD></TR>
  <TR>
    <TD class=3Dpe1 colSpan=3D3></TD></TR></TBODY></TABLE></BODY></HTML>

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/iniAni.gif

R0lGODlhIAAgAOIAADMAZv///wAAAP//AGYz//9mM/+ZZgAAACH/C05FVFNDQVBFMi4wAwEAAAAh
+QQJFAAAACwAAAAAIAAgAAIDQwi63P4wykmrvTjrzbu/QRh8i2iO3nl2qsq1qwa72RyD9l3lOsWb
mJ8oKERZisZdkShk/mpPKG8zpeZYsw+MpAByPQkAIfkECRQAAAAsBgAIABEAGAACA0UIutGxELr5
oqLU4iZEi1vgfUw4kkAoTpeJpeobd6w40g7+cN2Zj7CYbSesbXyO4ASZVHI2JV5I8oRSV9ZrFrS1
KL3gcAIAIfkECRQAAAAsBgAQABEAEAACA0EIujA+LK73ohCTVoDDVc4lVEIABB42XKnDmWjKoiJ7
xnNJ63dM+z4F0DM0CXG6IQNXNC6YRUkTJTkqq88YdltNAAAh+QQJFAAAACwGABAAEQAQAAIDQQi6
MD4srveiEJNWgMNVziVUQgAEHjZcqcOZaMqiInvGc0nrd0z7PgXQMzQJcbohA1c0LphFSRMlOSqr
zxh2W00AACH5BAkUAAAALAYACQARABcAAgNXCLo6wxA6F+O8tV1CXKnXwHmfFXrZ+WSAyk6CMDGx
5sgzIABBDcczQYDXw8WKFCGxeAwwj8uiUzilRp09rHZ4zW650eaXgaWOydOvM6LGZtoshTZOXyQA
ACH5BAkUAAAALAYACQARABcAAgNXCLo6wxA6F+O8tV1CXKnXwHmfFXoacz4L1Z7SKQgTM8sYIAAB
fc2+hyDA6/lmRsqwaEQGmkim8TmkVqXPXnZLxGq5XakTzMhWyWUq+BlZZzPuzGIrr0MSACH5BAkU
AAAALAYACQARABcAAgNXCLo6wxA6F+O8tV1CXKnXwHmfFXoacz4L1Z7SKQgTM8sYIAABfc2+hyDA
6/lmRsqwaEQGmkim8TmkVqXPXnZLxGq5XakTzMhWyWUq+BlZZzPuzGIrr0MSACH5BAkUAAAALAYA
CQASABcAAgNeCLo6wzA6B00EMysrMyFOcWEeOHBXlonNs6gUwMWtusywIEyQnmsAgSKwy+iKD0Fg
SCzqmhQls/kMUJ/TplW55WatRLB4+Q2PydnqGQLmrtnbs/UiB48A9ftCrO9DEgAh+QQJFAAAACwG
AAkAEgAXAAIDXgi6OsMwOgdNBDMrKzMhTnFhHjhwV5aJzbOoFMDFrbrMsCBMkJ5rAIEisMvoig9B
YEgs6poUJbP5DFCf06ZVueVmrUSwePkNj8nZ6hkC5q7Z27P1IgePAPX7QqzvQxIAOw==

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/grafs/logo.gif

R0lGODlhagA5APcAAFqvsWrJ0Gu+02XDxnO342G7vlabsV0W/msX/0mLkDMpaTNaZVGYoFKKs3q0
8ncY/UN4hYgZ+ggJEVekrjgld0pinGWRylJ8pkAkh2tX03GY21p+uREPJluSvi8NZmavyRgrMUg0
nXaT5zNJZVsS6z8TlzgMfkJkhSsrVzlfcGZ8yTw9gCUMSUYRqS49Xmyv13V542lm1UwUu1Y8wSEz
Qmc87VdmsxcJQUBPhE1MnCtPVUwQygAAAFcZ2lJRtnk/6gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAADwALAAAAABqADkA
AAj+AHkIHEiwoEGDHBIYuHCChoSDECNKnEixosWLJwAAMDChQ4cRDy+KHEmypEQOGjV2tGBhAwiT
MGPKjHghJYACH3Jq0OBips+fJHHYZFChgwUCBByIUAC0qdODKFMySHBhgw0VMEQ4cPDyqVegHBhM
kMoAAoQLFS6oiAEDxde3M1PYtDmBAQMDHTbk0DFiRIUULkZkZKgg8AIffRMr7ntBRmIIEky08DBi
gQsXNHSEhBuRxtzPG/Gq0FhAxVgAAT68IJCB9GjQKQP8SDmgx44Kp4fS4AyRQ+6yEBjMLQDgw+sC
GoQXCLDaQWvUz1VK1yjbwM0XD2rCBqCDt8ETZQH+K/BgwgSG3AAGfLCgcYCGBtQFJI3R/jmDFPgX
pMiY/sfYAjDMQNwEZuEHHmneFYSCBwqYh0EJGJhQQgvwtRfAa+5tcFMAAcxH3WzpVeABeSY8N0AG
1n0Aw2sXjDhiCT2Q1lWCArFAYgkSSugBBTYFoAF1yW0onwP0pVfkAAF0QAELO5TAAgso/GAdgBpu
NGILPTwQwX8z0lgQBxxsVkFs7KX3npAepgfDlMxdwAMHk0m25U0wVMkADzcccICWMnpZkQK0lele
hQEMeSQMhArQQUEyRJBinRrdmScCWv43AwkkyMDCZn4SdENKyLV35nIdEtneCyaq1tNAOzhKZ4X+
E9zggQxZPjDWADUggEAEJEDWqYKBippomgMI4N9N6nWwWaO3rpiSAgqgoEALM5CWq5bVJsApZxKA
cBkOI7ggFHUYaqDhcobGB4MNpH2wUEiNThlgSgnUW+9pHewZwQMVasstCBU0YBRLa1nnGnHucYRa
uqgNQICUpOFVAQc8MHuTBgdoB1sGlD5QLb3bNiWBUAYsVEEFIYTAbrvlwocusfKJ8HGkDVzgQqtT
voDpgaQBMEECPnRMQoUgeyXBCpFCkMIKFJQwZkoTGNByfBbM8HGxSZngw1BozTDncgf00IIJT5ZN
wQx7PoDAynN1+dPRQykd3FwMWHDkqAPg4MH+CitzmBQPJfiQWwILXOAqkpSuEK600npwwgOQz2zT
Al6FhR5oE1yg1t0XEJeAWQUcKYAADuzmwQzoFfC1ALtuMJW99Q4AeQ+Xc/cWBykIB1sCJ9hgQwYm
atDBXANgyBxXNcrwNAAqzFlsDRG8RvwDGX/WgAshj8TBkxR4gAEGFChAAQUhVJAA1ASmgEMOM6S8
9cUG01ZkAfJpkLJ5Jcgg+AQ/PBDbDxGoEnFo84D3DWUBCzgB9rTHAgp873vjw0AIckBBG/ggBxhg
ULR29MAOQssvGIBWtFbAgBCMEC0YqEALOiiDHJyABTJwQWEqUAIShNBGJPKAD2gHm7p8rjv+FblB
+EQILQqsAAc4OJkN0DJEaPVuBUQUYROjqIAVXCADQwwfDjIQQhGuoANdMQECSkBEClRAT0Ij2nbq
koLsDYQDCkgBAkegAx24QAf6OUEFztIAG8hRPwtIQAEqAEgEGhKBfzxk7gTgg0MuwAAZqIwhEyAA
iuHpASFwpAUO0LG1bQc0DLDklxRQu6HUiwENwAt6UhO/T86FQzEYIHUQlZsCvGAgEkBAdDQCA05i
y5WgdBsHlgfMCUTtA2pUj/SAGRsBwEB3N1HRMjtEEErZpADXegAJoMlMqHXpfN28SQFwQjR0LbOb
hRLB8EgzABFEZzkEqKar2lMDyCFAY1D+451ZuDmXCQxEB8ORJWwCQL9yFqpMPQNmoc5kIXf2KJ4D
2VX8AlDPAkqHASfQQZjA1AII8eczlOMBNxMwAmit4ARouQBC01OodQrJpQA4gR4hcLIL5IADHpio
AERAtHS+k5oRnVN7QvAA2iUgBRoNmQl6gKkQtJI0D7lmRz6AlKRsxQEIJZVBBRA/JI3OqluhAQau
OShQBcChpAGqQCRKGxA8KUwSyZOewvZUAECABz0qFAGGdFWl5NWl6HIph+SDlKtWgAJmMUsCPmCD
KqVnp7tUKw/Y2h63RUQCc9UTD68pAbMWqkNV7etfzSoAhHqVsFcVQchYQLQBtPOnEF3+q1DTsxuL
ZHZPktPIAvJK2MKKNjYB2GpXBxvareTAIKylzVkj6wBcUjY9loWIXOe6KzUCAJzUGSxqt6IBti0M
sAvtkQCYU1UNbIUFBUlueyBr1tjeYFe5GUB0D1IC6nIyAru8CW+rihQL+ECCed3qB3JTqA/IZzUE
EIEGRCBKHrBAY0hCK3Xc+9wB1HYiEiBBZnUVgRhtR7sveIEFMPi9EIw2rR1yKZKKFeIX7GQnDB6I
eh8rYXgO5L2zlS+eNhWRHWw4bRH4JIdyYoAcMA18GEAacB2LLkX1SD2qUY0GLKCBFTHFwY51rYRR
Q+F5QtcDB9hBCEImgfraV20RiID+dW3iWgZcgGnjEx/5xAve0f0oNjjJiQXWwxKWwCAHEngwbdib
1i7HFwN6ylQOLownH29YV1ry8mcKcB/MoIAGKECBCyiQzA8wuVDyaSVB17Oegang1KfGgIqX26Pm
8kACOJ5oDea6gxyowAYhaEELZLADDVO3Y/tKnVxsUi8IfO7Y3CzABDzt2f6yuTgA8AhLOoBqFWRg
Bq0l9IYI4IH8zQC+oJr1XEuwgQ34IAQT2oGj0UipfdXgMyAIp02ktoEBNhkpMB1AaDpggHL72wbs
yzKrY+OACclABuCmJyd1dZsOABzdLVA3dSGnJXxelweeCaebbTADtpFqrw54wXD+otbvDZTcKuzL
do0Lle4QPFcAuVo4CXKQF5Q9KOK+9mVRQSoQEECTOECnCwRykOsKfLq3WP2MAezCgA1ozqY5yAA0
i6WByGpgQi0IwQFynCtd6aoEE2hABYxcgnTnHAEksDgAOAWCBST27RA4AQ5WUPYQNIAlnv3qVupq
l6dDPQeIGvTKLXDzENQzfjD35QFIMCYDJCAHOIiQ2edKTI3ctSAeQOIKwOfAzksmBBegalb1ClYH
8N3NmjviBUQg8Kr3aAOSybrX4ltPXTGeXnJnmoQiru5xzaXBPKDACHAQvuKLUEIrMABhR98hvjpg
j5+ZStxxcAILqEDlP2Va2TH+EIPZUhQBi688BBYQrvGMSAHYnVxBaIBAHWD6/ZpekAsA0FvmI90C
Ahm20PXDgA94oLUDRxrQUh4rYAE51j+3F31HhUj8RC8GAQE/A3cFYmz3RgCj91VIoQGb4QKX40Mf
8ELYByoNgWkoAAEGGF8VkIDyRhchAwHAdFpIIT0VqAHABwLplxLKYgJZJgCuRxZ2cTE5BgEcgAJr
1k2hdBAu6EowqAEaQyrM8QLztVs28QEjUDEA2IOggRw5didvMgIN6Eq+goQvWCgvcAES0ISD1QBu
JBCWoxFuUjHxsxxbNhwwEGS0kQAEwQE4UErRB0QQ4YKvAztTIRxIYgC7wQFVojYAJ7CGb3Q+/sID
JqYSyzEC+XVNMfBuoIKHX+KFPZQAjNYbErCGEkADM9ItpEiKGiUSmnFjdYRHC9AdKOBIk1QAOkAB
jjRfr5YZf6QDIMCIPBAQAAA7

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto1.gif

R0lGODlhcwAMAPcAAAAAABg5SiFSYzFrjDmMta3nKcbGAP//xv//////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////yH5BAEAAAUALAAAAABzAAwA
AAjRAAMAGDiwgMGDCBMqXMiwocOHDAlKnEixokUABQIQGMBRAEaIIEOKHFkAAIGTKFOqXMkS5YED
GDVy7PiRpM2bIWXO3Mmzp8+dBoLG3LjTI86jSBPq/Mm06YCgQjMSLRqgqtWrWLNq3cq1q9eqU4sK
GEu2rNmzZ4cOqLqzpdu3cOPKVenT48W7F6UGeBnAqd+/gAP7FRAg6UKrBwz0Fcy4sWOehA0f3sj2
seXLg2tKRrgUs+fPM41uVqgRrenTqFOrXm268GjSX2PLnk2b6+uFAQEAOw==

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto2.gif

R0lGODlhcwAVALMAAABrCAhKaxg5SiFSYyFjhDFrjDmMtUqM763nKe/v5wAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAgALAAAAABzABUAAAT+MEgpqr046827/2CITYFgGINQmEW6nnAsz3Rt33iu08LE
uj8Vq0AsGo/IpHLJbDqfxhTF0BJSgVSodsuFDgbHbxhclAZfVXTry2673/C4fE5vZ4mDxIHcSgD4
eXtlFVdWaUN8XYqLTHctB3tZAwB/kpADkoRYh5KMnp9HjmsnZZh3X6RVApubeKCvijFIqUW0RLQp
FWitrrC+T6KgubuGUb/HS8HCFoVqxsjQtUh11LnNQ2HR0cG5Ih6cSonasNwCCOfo6err66vFSeLj
n+Xs9fbputjw8uTT5vcA2b0Lxw8UvYAI8ekLt6Ohw4b+Eko8t7BgwRQTJ1a0OA5jRokYq6qJHEly
5L+PCRWoXKnSm8uXMCugnBgBADs=

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/grafs/pto2a.gif

R0lGODlhcwAVALMAAABrCAhKaxg5SiFSYyFjhDFrjDmMtUqM763nKe/v5wAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAgALAAAAABzABUAAAT+EMlJq71X6M27/2AojuFQFIaArWw2vHAsz3Rt3/h9pm3P
CqaTcEgsGo/IpHLJ8zkpwKV0Sq0im09nlGjoer/gsHhMLoODyZQq69sODda4vIg+pgpr9q++m/vn
fFwCeHl6LkVwf4pVgUJ3QIWGUIGJi5ZLjSiDUSSdG5SXoUqNjyZqOaigoqtGlJumn6yVrLQnfKWa
hJl+s7W0dbiPGmhdXL3Fxsi+vsSvuZBbXS+OBtM71bfL2rY7zqWnOwMHB0HVAADlAxLA28vl3vBu
4gloAwD0Qur4jqn9/v81uuGBNVBTADcFrOXjo7Bdu2DwAhzc5bBiGngFU0g8aKajx48WIEOGxAik
i4CNBz2pXMmypUsRKANEAAA7

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/img/haus2.png

iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAMAAAF7D1XuAAAABlBMVEUAAACCkb4DVVPxAAAAAXRS
TlMAQObYZgAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAQlJREFUeNoB/gAB/wAAAAAAAAAAAAAAAQAA
AQABAAABAAEAAAABAAAAAAEAAAEAAAAAAQAAAAAAAAABAQAAAQAAAQAAAAABAAAAAQEAAQEBAAAA
AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAQABAAAAAAAAAQAAAAEAAQEAAAAAAAABAAAAAQAA
AAEBAAAAAAEBAAAAAAAAAAAAAQEAAAAAAQABAQAAAQEBAAEAAAAAAAEAAQEAAAEBAQABAAAAAAAB
AQEBAQEBAQEBAQAAGqcAQv1LH7cAAAAASUVORK5CYII=

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.numaboa.com.br/img/mailto.gif

R0lGODdhDgAKAKIAAP////r7v+rrl8TFDKOkAH1+AElKAAAAACwAAAAADgAKAAADLWi63AQwynEM
KCLrXEgFAraFgmdxm2iCpdhla8mpZRUQo0aYw+7/u8phSCwSEwA7

------=_NextPart_000_00BB_01C5C514.637580B0
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.numaboa.com.br/informatica/oiciliS/assembler/styleAssembly.css

A {
	COLOR: #00ccff; TEXT-DECORATION: none
}
A:visited {
	COLOR: #cccccc
}
A:hover {
	TEXT-DECORATION: underline overline
}
A:active {
	COLOR: #99ffcc
}
BODY {
	SCROLLBAR-FACE-COLOR: #236282; FONT-SIZE: 10pt; =
SCROLLBAR-HIGHLIGHT-COLOR: #003399; SCROLLBAR-SHADOW-COLOR: #505050; =
COLOR: #ffffff; SCROLLBAR-3DLIGHT-COLOR: #505050; SCROLLBAR-ARROW-COLOR: =
#00ccff; SCROLLBAR-TRACK-COLOR: #084a6b; FONT-FAMILY: Verdana, Arial, =
Helvetica; SCROLLBAR-DARKSHADOW-COLOR: #000000; BACKGROUND-COLOR: =
#084a6b; TEXT-ALIGN: center
}
.borda {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black 1px solid
}
.bordaI {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
PADDING-LEFT: 2em; BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black =
1px solid
}
.bordaCor {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black 1px solid; =
BACKGROUND-COLOR: #006699
}
.bordaCorI {
	BORDER-RIGHT: black 1px solid; BORDER-TOP: black 1px solid; =
PADDING-LEFT: 2em; BORDER-LEFT: black 1px solid; BORDER-BOTTOM: black =
1px solid; BACKGROUND-COLOR: #006699
}
TR.meio1 {
	BACKGROUND-COLOR: #236282
}
TD {
	FONT-SIZE: 10pt; COLOR: #ffffff; FONT-FAMILY: Verdana, Arial, Helvetica
}
TD.cab1 {
	FONT-WEIGHT: bold; BACKGROUND: url(grafs/cab1.gif); COLOR: #00ccff; =
HEIGHT: 32px; TEXT-ALIGN: center
}
TD.cab1a {
	BACKGROUND: url(grafs/cab1a.gif) #006699; WIDTH: 27px
}
TD.pto1 {
	FONT-WEIGHT: bold; HEIGHT: 40px; BACKGROUND-COLOR: #236282
}
TD.pe1 {
	BACKGROUND: url(grafs/pe1.gif); HEIGHT: 18px
}
TD.meio1 {
	BACKGROUND-COLOR: #236282
}
TD.c66CC {
	PADDING-RIGHT: 10px; BACKGROUND-COLOR: #0066cc; TEXT-ALIGN: right
}
HR {
	COLOR: #00ccff; HEIGHT: 1px
}
H1 {
	MARGIN-TOP: 1px; FONT-WEIGHT: bold; FONT-SIZE: 14px; MARGIN-BOTTOM: =
1px; FONT-FAMILY: Verdana, Arial, Helvetica
}
H2 {
	MARGIN-TOP: 0px; FONT-SIZE: xx-small; MARGIN-BOTTOM: 0px; FONT-FAMILY: =
Verdana, Arial, Helvetica
}
H3 {
	MARGIN-TOP: 0px; FONT-SIZE: 9px; MARGIN-BOTTOM: 0px; COLOR: #666666; =
FONT-FAMILY: Verdana, Arial, Helvetica
}
P {
	MARGIN: 10px 50px; TEXT-INDENT: 20pt; TEXT-ALIGN: justify
}
BLOCKQUOTE {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; TEXT-ALIGN: justify
}
PRE {
	MARGIN-TOP: 0px; MARGIN-LEFT: 40pt; FONT-FAMILY: Verdana, Arial, =
Helvetica
}
.asmcode {
	BORDER-RIGHT: #236282 2px dotted; PADDING-RIGHT: 20px; BORDER-TOP: =
#236282 2px dotted; PADDING-LEFT: 20px; FONT-SIZE: 14px; PADDING-BOTTOM: =
20px; MARGIN: 10px 50px; BORDER-LEFT: #236282 2px dotted; COLOR: =
#00ccff; PADDING-TOP: 20px; BORDER-BOTTOM: #236282 2px dotted; =
FONT-FAMILY: "Courier new"; BACKGROUND-COLOR: #337292
}
OL {
	PADDING-RIGHT: 50px; PADDING-LEFT: 50px; TEXT-ALIGN: justify
}
UL {
	PADDING-RIGHT: 50px; PADDING-LEFT: 50px; TEXT-ALIGN: justify
}

------=_NextPart_000_00BB_01C5C514.637580B0--
